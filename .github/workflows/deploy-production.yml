name: Deploy to Caprover
on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    environment: Production
    permissions:
      contents: read
      packages: write
    outputs:
      image-tag: ${{ steps.set-image-tag.outputs.image-tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Docker meta
        id: strapi-meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ghcr.io/WillianRod/api-willianrod-com

      - id: set-image-tag
        run: echo "::set-output name=image-tag::${{ fromJson(steps.strapi-meta.outputs.json).tags[0] }}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          builder: ${{ steps.buildx.outputs.name }}
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PUSH_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.strapi-meta.outputs.tags }}
          labels: ${{ steps.strapi-meta.outputs.labels }}

  deploy_production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [build]
    environment: Production
    concurrency: Production

    steps:
      - name: "Install caprover-cli"
        run: npm install -g caprover

      - name: "Deploy strapi"
        env:
          APP_NAME: ${{ secrets.APP_NAME }}
          APP_URL: ${{ secrets.CAPROVER_URL }}
          CAPROVER_APP_TOKEN: ${{ secrets.STRAPI_CAPROVER_APP_TOKEN }}
          IMAGE_NAME: ${{ needs.build.outputs.image-tag }}
        run: "caprover deploy --caproverUrl=$APP_URL --imageName=$IMAGE_NAME --appName=$APP_NAME"
