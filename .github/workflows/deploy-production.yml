name: Deploy to Caprover
on:
  # [push]
  release: # https://docs.github.com/en/actions/learn-github-actions/events-that-trigger-workflows#release
    types: [published] # GITHUB_REF Tag of release

jobs:
  build:
    runs-on: ubuntu-latest
    environment: Production
    permissions:
      contents: read
      packages: write
    outputs:
      # output the image tag that was built and pushed so we can deploy this image tag in the deploy job
      image-tag: ${{ steps.set-image-tag.outputs.image-tag }}
    steps:
      - id: set-image-tag
        run: echo "::set-output name=image-tag::${{ fromJson(steps.strapi-meta.outputs.json).tags[0] }}"

      - name: Docker meta
        id: strapi-meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ghcr.io/WillianRod/api-willianrod

      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.strapi-meta.outputs.tags }}
          labels: ${{ steps.strapi-meta.outputs.labels }}

  # deploy_production:
  #   name: Deploy to Production
  #   runs-on: ubuntu-latest
  #   needs: [build]
  #   environment: Production
  #   concurrency: Production

  #   env:
  #     CAPROVER_URL: ${{ secrets.CAPROVER_URL }}
  #     STRAPI_CAPROVER_APP_TOKEN: ${{ secrets.STRAPI_CAPROVER_APP_TOKEN }}

  #   strategy:
  #     matrix:
  #       include:
  #         - app: strapi
  #           token-key: STRAPI_CAPROVER_APP_TOKEN
  #           image: ${{ needs.build.outputs.image-tag }}

  #   steps:
  #     # Install Caprover CLI, which we use to deploy images to Caprover
  #     - name: "Install caprover-cli"
  #       run: npm install -g caprover

  #     # Deploy each app by iterating over matrix values
  #     - name: "Deploy strapi"
  #       env:
  #         APP_NAME: strapi
  #         APP_URL: ${{ secrets.CAPROVER_URL }}
  #         CAPROVER_APP_TOKEN: ${{ secrets.STRAPI_CAPROVER_APP_TOKEN }}
  #         IMAGE_NAME: ${{ needs.build.outputs.image-tag }}
  #       run: "caprover deploy --caproverUrl=$APP_URL --imageName=$IMAGE_NAME --appName=$APP_NAME"
